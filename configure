#!/usr/bin/env bash
#
# configure
#     Part of: malte70/moin
#
# x86_64 GNU/Linux assembler hello world
#
# Copyright (c) 2015 Malte Bublitz, http://malte-bublitz.de
# All rights reserved.
#

cat <<EOF

configure script for malte70/moin

EOF

# Checks whether an application ($2) is available on the system.
# If it was found and the value of $1 is empty, it is stored in the variable
# name given in $1.
# If $3 is set, the script will exit.
# Example usage:
#   check_for_application AS gas
#   check_for_application CC clang 1
check_for_application() {
	if [ -n "`eval "echo $\"\${1}\""`" ]
	then
		return
	fi

	echo -n "Checking for ${2}... "

	if which "$2" &>/dev/null
	then
		export $1=$(which $2)
		echo "`eval "echo $\"\${1}\""`"
	else
		echo "Not found!"
		if [ -n "$3" ]
		then
			exit 1
		fi
	fi
}

# -n option for echo is not supported everywhere, but if this check succeeds, it is.
printf "Checking for operating system... "
_OS=$(uname -o 2>/dev/null || uname -s)
echo $_OS
case "$_OS" in
	"GNU/Linux"|"FreeBSD") ;;
	*)
		echo "$0: Error: Unsupported operating system: $_OS!" >&2
		exit 1
esac

echo -n "Checking for CPU architecture... "
_CPUTYPE=$(uname -m)
echo $_CPUTYPE
case "$_CPUTYPE" in
	"x86_64"|"amd64") ;;
	*)
		echo "$0: Error: Unsupported architecture: $_CPUTYPE!" >&2
		exit 1
esac

unset AS CC

check_for_application AS gas
check_for_application AS as 1
check_for_application CC gcc
check_for_application CC clang 1

echo -n "Creating Makefile... "

(
	echo "all:"
	echo "	@make -C src/ -s all"
	echo ""
	echo "clean:"
	echo "	@make -C src/ -s clean"
	echo "	"
	echo "clean-all:"
	echo "	@make -C src/ -s clean-all"
	echo "	"
) >Makefile
echo "Done."

echo -n "Creating src/Makefile... "
(
	echo "CC=$CC"
	echo "AS=$AS"
	echo "CFLAGS=-std=c11 -I../include -Wall -march=native -fPIC"
	echo "ASFLAGS=-Wall -I../include"
	echo ""
	echo "all: ../bin/moin"
	echo "	"
	echo ".S.o:"
	echo "	@echo \" [AS] src/\$<\""
	echo "	@\$(AS) -c \$(ASFLAGS) -o \$@ \$< >/dev/null"
	echo "	"
	echo ".c.o:"
	echo "	@echo \" [CC] src/\$<\""
	echo "	@\$(CC) -c \$(CFLAGS) -o \$@ \$<"
	echo "	"
	echo "../bin/moin: main.o moin.o"
	echo "	@echo \" [LD] bin/moin\""
	echo "	@\$(CC) -o \$@ \$(CFLAGS) *.o"
	echo "	"
	echo "clean:"
	echo "	@echo \" [RM] bin/moin\""
	echo "	@\$(RM) ../bin/moin"
	echo "	@echo \" [RM] src/*.o\""
	echo "	@\$(RM) *.o"
	echo "	"
	echo "clean-all:"
	echo "	@make -s clean"
	echo "	@echo \" [RM] Makefile\""
	echo "	@\$(RM) ../Makefile"
	echo "	@echo \" [RM] src/Makefile\""
	echo "	@\$(RM) Makefile"
	echo "	"
) >src/Makefile

cat <<EOF

Now run
  make
to compile the source code.

EOF

# vim: set ft=sh:
